{"ast":null,"code":"var _jsxFileName = \"/Users/school/weather-app/src/Context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, createContext, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\n/* this lets you import the theme alot easier later not to sure how*/\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setTheme] = useState();\n  /*creating toggle function*/\n  const toggleTheme = () => {\n    const newTheme = theme === \"dark-theme\" ? \"light-theme\" : \"dark-theme\";\n    //same as \"if its dark theme change it to light else change to dark theme\"\n    // so dark them is the defualt \n    setTheme(newTheme);\n    localStorage.setItem(\"theme\", newTheme);\n  };\n  useEffect(() => {\n    const storedTheme = localStorage.getItem(\"theme\") || \"dark-theme\";\n    setTheme(storedTheme);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s2(ThemeProvider, \"dYJDqV9tNQyVwsPiiMNpAUp38T0=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["useState","createContext","useContext","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","theme","setTheme","toggleTheme","newTheme","localStorage","setItem","storedTheme","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/school/weather-app/src/Context/ThemeContext.js"],"sourcesContent":["import { useState, createContext, useContext, useEffect } from \"react\";\n\nconst ThemeContext = createContext()\n\n/* this lets you import the theme alot easier later not to sure how*/\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n    const [theme, setTheme] = useState();\n    /*creating toggle function*/\n    const toggleTheme = () => {\n        const newTheme = theme === \"dark-theme\" ? \"light-theme\" : \"dark-theme\"\n        //same as \"if its dark theme change it to light else change to dark theme\"\n        // so dark them is the defualt \n        setTheme(newTheme)\n        localStorage.setItem(\"theme\", newTheme)\n    }\n\n    useEffect(() => {\n        const storedTheme = localStorage.getItem(\"theme\") || \"dark-theme\"\n        setTheme(storedTheme)\n    }, [])\n\n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme }}>\n            {children}\n        </ThemeContext.Provider>\n    )\n} "],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMM,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC;EACpC;EACA,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,QAAQ,GAAGH,KAAK,KAAK,YAAY,GAAG,aAAa,GAAG,YAAY;IACtE;IACA;IACAC,QAAQ,CAACE,QAAQ,CAAC;IAClBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;EAC3C,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZ,MAAMe,WAAW,GAAGF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC,IAAI,YAAY;IACjEN,QAAQ,CAACK,WAAW,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAET,KAAK;MAAEE;IAAY,CAAE;IAAAJ,QAAA,EAChDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAAAd,GAAA,CArBYF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}